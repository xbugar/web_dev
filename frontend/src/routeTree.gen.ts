/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as NotebooksIndexImport } from './routes/notebooks/index'
import { Route as NotebooksNotebookIdIndexImport } from './routes/notebooks/$notebookId/index'
import { Route as NotebooksNotebookIdNoteIdImport } from './routes/notebooks/$notebookId/$noteId'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const NotebooksIndexRoute = NotebooksIndexImport.update({
  id: '/notebooks/',
  path: '/notebooks/',
  getParentRoute: () => rootRoute,
} as any)

const NotebooksNotebookIdIndexRoute = NotebooksNotebookIdIndexImport.update({
  id: '/notebooks/$notebookId/',
  path: '/notebooks/$notebookId/',
  getParentRoute: () => rootRoute,
} as any)

const NotebooksNotebookIdNoteIdRoute = NotebooksNotebookIdNoteIdImport.update({
  id: '/notebooks/$notebookId/$noteId',
  path: '/notebooks/$notebookId/$noteId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/notebooks/': {
      id: '/notebooks/'
      path: '/notebooks'
      fullPath: '/notebooks'
      preLoaderRoute: typeof NotebooksIndexImport
      parentRoute: typeof rootRoute
    }
    '/notebooks/$notebookId/$noteId': {
      id: '/notebooks/$notebookId/$noteId'
      path: '/notebooks/$notebookId/$noteId'
      fullPath: '/notebooks/$notebookId/$noteId'
      preLoaderRoute: typeof NotebooksNotebookIdNoteIdImport
      parentRoute: typeof rootRoute
    }
    '/notebooks/$notebookId/': {
      id: '/notebooks/$notebookId/'
      path: '/notebooks/$notebookId'
      fullPath: '/notebooks/$notebookId'
      preLoaderRoute: typeof NotebooksNotebookIdIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/notebooks': typeof NotebooksIndexRoute
  '/notebooks/$notebookId/$noteId': typeof NotebooksNotebookIdNoteIdRoute
  '/notebooks/$notebookId': typeof NotebooksNotebookIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/notebooks': typeof NotebooksIndexRoute
  '/notebooks/$notebookId/$noteId': typeof NotebooksNotebookIdNoteIdRoute
  '/notebooks/$notebookId': typeof NotebooksNotebookIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/notebooks/': typeof NotebooksIndexRoute
  '/notebooks/$notebookId/$noteId': typeof NotebooksNotebookIdNoteIdRoute
  '/notebooks/$notebookId/': typeof NotebooksNotebookIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/notebooks'
    | '/notebooks/$notebookId/$noteId'
    | '/notebooks/$notebookId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/notebooks'
    | '/notebooks/$notebookId/$noteId'
    | '/notebooks/$notebookId'
  id:
    | '__root__'
    | '/'
    | '/notebooks/'
    | '/notebooks/$notebookId/$noteId'
    | '/notebooks/$notebookId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  NotebooksIndexRoute: typeof NotebooksIndexRoute
  NotebooksNotebookIdNoteIdRoute: typeof NotebooksNotebookIdNoteIdRoute
  NotebooksNotebookIdIndexRoute: typeof NotebooksNotebookIdIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  NotebooksIndexRoute: NotebooksIndexRoute,
  NotebooksNotebookIdNoteIdRoute: NotebooksNotebookIdNoteIdRoute,
  NotebooksNotebookIdIndexRoute: NotebooksNotebookIdIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/notebooks/",
        "/notebooks/$notebookId/$noteId",
        "/notebooks/$notebookId/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/notebooks/": {
      "filePath": "notebooks/index.tsx"
    },
    "/notebooks/$notebookId/$noteId": {
      "filePath": "notebooks/$notebookId/$noteId.tsx"
    },
    "/notebooks/$notebookId/": {
      "filePath": "notebooks/$notebookId/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
